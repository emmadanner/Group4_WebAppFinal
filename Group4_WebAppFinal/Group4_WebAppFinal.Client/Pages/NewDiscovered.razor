@page "/discovered/new"
@using Group4_WebAppFinal.Model
@inject HttpClient http
@inject NavigationManager Navigation

<h3>Enter your Pokemon's Information!</h3>

<EditForm Model="@pokemon" OnValidSubmit="@HandleValidSubmit" FormName="pokemon_fluent_entry" novalidate>
    <DataAnnotationsValidator />
    <FluentValidationSummary />

    <FluentStack Orientation="Orientation.Vertical">
        <div>
            <FluentTextField Name="pokemonName" @bind-Value="pokemon.PokemonName" Label="PokemonName" Required />
            <FluentValidationMessage For="@(() => pokemon.PokemonName)" />
        </div>
        <div>
            <FluentTextField Name="Type1" @bind-Value="pokemon.Type1" Label="Type1" Required />
        </div>
        <FluentButton Type="ButtonType.Submit" OnClick="@(() => Navigation.NavigateTo($"discovered"))" Appearance="Appearance.Accent">Submit</FluentButton>
    </FluentStack>

</EditForm>

@code {

    // IQueryable<TypeViewModel> types { get; set; }

    // protected override async Task OnParametersSetAsync()
    // {
    //     types = (await http.GetFromJsonAsync<List<TypeViewModel>>("/api/types")).AsQueryable();
    // }

    public PokemonViewModel pokemon { get; set; } = new();



    private async Task HandleValidSubmit()
    {
        await http.PostAsJsonAsync("/api/pokemon/", pokemon);
    }
    
}
